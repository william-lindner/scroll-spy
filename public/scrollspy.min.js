!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).ScrollSpy=n()}(this,(function(){"use strict";return class{constructor(t,n=100){if(!(t instanceof HTMLElement))throw new Error("Invalid sticky implementation. Must pass element as first argument.");if(!Number.isInteger(n))throw new Error("The delay on the scroll spy must be an integer.");this.$el=t,this.$actions={above:[],on:[],below:[],inView:[],notInView:[]};let e=null;window.setTimeout((()=>{this.update(),window.setTimeout((()=>{window.addEventListener("scroll",(()=>{window.clearTimeout(e),e=window.setTimeout((()=>this.update()),n)}),{capture:!1,passive:!0})}),1)}),1)}update(){let t=document.documentElement,n=t.scrollTop,e=this.$el.getBoundingClientRect(),i=(e.y||e.top)+n;return i=Math.round(i<0?0:i),t.scrollTop===i?this.runActions("on"):t.scrollTop>i?this.runActions("below"):this.runActions("above"),e.top>=0&&e.left>=0&&e.bottom<=(window.innerHeight||t.clientHeight)&&e.right<=(window.innerWidth||t.clientWidth)?this.runActions("inView"):this.runActions("notInView"),this}addAction(t,n){if(!this.$actions[t])throw new Error("The action provided is not available.");if("function"!=typeof n)throw new Error("Cannot add action that is not a function.");return this.$actions[t].push(n),this}runActions(t){if(!this.$actions[t])throw new Error("Cannot run actions which are not supported.");for(let n of this.$actions[t])window.setTimeout(n.bind(this.$el),0)}whenAbove(t){return this.addAction("above",t)}whenBelow(t){return this.addAction("below",t)}whenOn(t){return this.addAction("on",t)}whenInView(t){return this.addAction("inView",t)}whenNotInView(t){return this.addAction("notInView",t)}}}));
